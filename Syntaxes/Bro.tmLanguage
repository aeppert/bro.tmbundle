<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>bro</string>
	</array>
	<key>foldingStartMarker</key>
	<string>^(\@if(n?def)?)</string>
	<key>foldingStopMarker</key>
	<string>^\@endif</string>
	<key>keyEquivalent</key>
	<string>@B</string>
	<key>name</key>
	<string>Bro</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>#</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.bro</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$\n?</string>
			<key>name</key>
			<string>comment.line.number-sign.bro</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(break|case|continue|else|for|if|return|switch|next|when|timeout|schedule)\b</string>
			<key>name</key>
			<string>keyword.control.bro</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.bro</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.bro</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>variable.parameter</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*(?:function|hook|event)\s*(.*)\s*\((.*)\).*$</string>
			<key>name</key>
			<string>meta.function.bro</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(bool|enum|double|int|count|port|addr|subnet|any|file|interval|time|string|table|vector|set|record|pattern|hook)\b</string>
			<key>name</key>
			<string>storage.type.bro</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(global|const|redef|local|&amp;(optional|rotate_interval|rotate_size|add_func|del_func|expire_func|expire_create|expire_read|expire_write|persistent|synchronized|encrypt|mergeable|priority|group|type_column|log|error_handler))\b</string>
			<key>name</key>
			<string>storage.modifier.bro</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\s*(\||&amp;&amp;|(&gt;|&lt;|!)=?|==)\s*|\b(!?in)\b</string>
			<key>name</key>
			<string>keyword.operator.bro</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(T|F)\b</string>
			<key>name</key>
			<string>constant.language.bro</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)(/(tcp|udp|icmp)|(\s*(u?sec|min|hr|day)s?))?\b</string>
			<key>name</key>
			<string>constant.numeric.bro</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.bro</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.bro</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.bro</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_placeholder</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>/</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.bro</string>
				</dict>
			</dict>
			<key>end</key>
			<string>/</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.bro</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.regex.bro</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_escaped_char</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_placeholder</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(\@load(-sigs)?)\b</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.special-method.bro</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=(?:\#))|$</string>
			<key>name</key>
			<string>meta.preprocessor.bro.load</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^\s*(\@endif|\@if(?:n?def)?).*$</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.special-method.bro</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>meta.preprocessor.bro.if</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>disabled</key>
		<dict>
			<key>begin</key>
			<string>^\s*\@if(n?def)?\b.*$</string>
			<key>comment</key>
			<string>eat nested preprocessor ifdefs</string>
			<key>end</key>
			<string>^\s*\@endif\b.*$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#disabled</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#pragma-mark</string>
				</dict>
			</array>
		</dict>
		<key>preprocessor-rule-other</key>
		<dict>
			<key>begin</key>
			<string>^\s*(@if(n?def)?)\b.*?(?:(?=)|$)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>meta.preprocessor.bro</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.preprocessor.bro</string>
				</dict>
			</dict>
			<key>end</key>
			<string>^\s*(@endif)\b.*$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$base</string>
				</dict>
			</array>
		</dict>
		<key>string_escaped_char</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(\\|[abefnprtv'"?]|[0-3]\d{,2}|[4-7]\d?|x[a-fA-F0-9]{,2})</string>
					<key>name</key>
					<string>constant.character.escape.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>invalid.illegal.unknown-escape.bro</string>
				</dict>
			</array>
		</dict>
		<key>string_placeholder</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?x)%
						(\d+\$)?                             # field (argument #)
						[#0\- +']*                           # flags
						[,;:_]?                              # separator character (AltiVec)
						((-?\d+)|\*(-?\d+\$)?)?              # minimum field width
						(\.((-?\d+)|\*(-?\d+\$)?)?)?         # precision
						(hh|h|ll|l|j|t|z|q|L|vh|vl|v|hv|hl)? # length modifier
						[diouxXDOUeEfFgGaACcSspn%]           # conversion type
					</string>
					<key>name</key>
					<string>constant.other.placeholder.bro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>%</string>
					<key>name</key>
					<string>invalid.illegal.placeholder.bro</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.bro</string>
	<key>uuid</key>
	<string>2FF24728-1643-44D5-A4AC-FEE7CC17B0BA</string>
</dict>
</plist>
